# -*- coding: utf-8 -*-
#==============================================================================
# module : loop_view.py
# author : Matthieu Dartiailh
# license : MIT license
#==============================================================================
"""
"""
from enaml.widgets.api import (Container, MultilineField, Field, GroupBox,
                               Form, Label, CheckBox)
from enaml.core.api import Conditional, Include
from enaml.layout.api import hbox, vbox

from ..browsing import TaskSelector

enamldef LoopView(Container): view:

    attr model
    constraints << [vbox(hbox(name_lab, name_val, sub),
                         hbox(*tuple(simple.items + embed.items))),
                    ]

    Label: name_lab:
        text = 'Task name'
    Field: name_val:
        text := model.task_name
        submit_triggers = ['lost_focus', 'return_pressed', 'auto_sync']
    CheckBox: sub:
        text = 'Use subtask'
        checked := model.use_subtask

    Conditional: simple:
        condition << not model.use_subtask
        MultilineField:
            text = model.task_doc

    Conditional: embed:
        condition << model.use_subtask
        Container:
            padding = 0
            constraints << [vbox(desc, hbox(selector, *conf.objects))]

            Label: desc:
                text = model.task_doc
            TaskSelector: selector:
                hug_width = 'strong'
                manager = view.model.manager
                display_filters = False
                selected_filter = 'Loopable'
                selected_task >> model.subtask
            Include: conf:
                objects  << [model.config_view] if model.config_view else []
